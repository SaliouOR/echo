"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const viewsController = require("../controllers/viewsController");
const authController = require("../controllers/authController");
const postsController = require("../controllers/postsController");
const commentsController = require("../controllers/commentsController");
const userController = require("../controllers/userController");
const searchController = require("../controllers/searchController");
const router = express_1.default.Router();
router.use(viewsController.alerts);
router.get("/", authController.isLoggedIn, viewsController.getWelcome);
router.get("/feed", authController.protect, viewsController.getHome);
router.get("/search", authController.protect, searchController.search);
router.post("/feed", authController.protect, postsController.createPost);
router.get("/feed/post/:id", authController.protect, postsController.getPost);
router.delete("/feed/post/:id", authController.protect, postsController.deletePost);
router.get("/feed/more", authController.protect, viewsController.getMorePosts);
router.post("/feed/post/:id", authController.protect, commentsController.createComment);
router.delete("/feed/post/:id/comment/:commentId", authController.protect, commentsController.deleteComment);
router.post("/feed/post/:id/like", authController.protect, postsController.togglePostLike);
router.post("/feed/post/:postId/comment/:commentId/like", authController.protect, commentsController.toggleCommentLike);
router.post("/feed/post/:id/repost", authController.protect, postsController.togglePostRepost);
router.get("/login", authController.isLoggedIn, viewsController.getLoginForm);
router.get("/register", authController.isLoggedIn, viewsController.getRegisterForm);
router.get("/profile/:id", authController.protect, userController.getProfile);
router.get("/profile/:id/comments", authController.protect, userController.getProfileComments);
router.get("/profile/:id/likes", authController.protect, userController.getProfileLikes);
router.get("/profile/:id/reposts", authController.protect, userController.getProfileReposts);
router.post("/profile/:id", authController.protect, userController.updateProfile);
router.get("/profile/:id/followers", authController.protect, userController.getFollowers);
router.get("/profile/:id/following", authController.protect, userController.getFollowing);
router.post("/profile/follow/:id", authController.protect, userController.followUser);
router.delete("/profile/follow/:id", authController.protect, userController.unfollowUser);
router.get("/notifications", authController.protect, viewsController.getNotifs);
router.get("/messages", authController.protect, viewsController.getMessages);
exports.default = router;
